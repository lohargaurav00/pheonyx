// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

UdpClient createUdpClient() =>
    RustLib.instance.api.crateApiUdpClientCreateUdpClient();

Future<void> udpClientConnectToServer({
  required UdpClient client,
  required String ip,
  required int port,
}) => RustLib.instance.api.crateApiUdpClientUdpClientConnectToServer(
  client: client,
  ip: ip,
  port: port,
);

Future<void> udpClientSendText({
  required UdpClient client,
  required String message,
}) => RustLib.instance.api.crateApiUdpClientUdpClientSendText(
  client: client,
  message: message,
);

Future<String> udpClientReceiveText({required UdpClient client}) =>
    RustLib.instance.api.crateApiUdpClientUdpClientReceiveText(client: client);

bool udpClientIsConnectedStatus({required UdpClient client}) => RustLib
    .instance
    .api
    .crateApiUdpClientUdpClientIsConnectedStatus(client: client);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Arc < UdpSocket >>>
abstract class ArcUdpSocket implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UdpClient>>
abstract class UdpClient implements RustOpaqueInterface {
  bool get connected;

  ArcUdpSocket? get socket;

  set connected(bool connected);

  set socket(ArcUdpSocket? socket);

  Future<void> connect({required int port, required String ip});

  factory UdpClient() => RustLib.instance.api.crateApiUdpClientUdpClientNew();

  Future<String> receiveMessage();

  Future<void> sendMessage({required String message});
}
